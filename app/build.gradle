plugins {
    id 'java'
    id 'checkstyle'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'jacoco'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Javalin без logback-classic
    implementation('io.javalin:javalin:6.1.3') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }

    // Основные библиотеки SLF4J
    implementation('org.slf4j:slf4j-api:2.0.12')
    implementation('org.slf4j:slf4j-simple:2.0.12')

    // Остальные зависимости
    implementation('com.h2database:h2:2.2.224')
    implementation('com.zaxxer:HikariCP:5.1.0')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.16.1')
    implementation('org.apache.commons:commons-text:1.11.0')
    implementation('gg.jte:jte:3.1.12')

    // Javalin-bundle без logback-classic
    implementation('io.javalin:javalin-bundle:6.1.3') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }

    // Javalin-rendering без logback-classic
    implementation('io.javalin:javalin-rendering:6.1.3') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }

    // Другие необходимые библиотеки
    implementation('org.postgresql:postgresql:42.6.0')
    implementation('org.jsoup:jsoup:1.15.3')
    implementation('com.konghq:unirest-java:3.11.11')
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Тестовые зависимости с явным указанием версий
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'io.javalin:javalin-testtools:6.1.3'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.2'
    checkstyle 'com.puppycrawl.tools:checkstyle:8.45.1'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

application {
    mainClass = 'hexlet.code.App'
}

checkstyle {
    toolVersion = '8.45.1'
    configFile = file('config/checkstyle/checkstyle.xml')
    configProperties['checkstyle.enableExternalDtdLoad'] = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}

shadowJar {
    archiveBaseName.set('app')
    archiveVersion.set('1.0-SNAPSHOT')
    archiveClassifier.set('')
    mergeServiceFiles()
}

tasks.named('distZip') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('distTar') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('startScripts') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('startShadowScripts') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('jar') {
    enabled = false
}

// Новая задача для отображения структуры файлов проекта (если потребуется)
task printProjectStructure {
    doLast {
        fileTree(dir: projectDir).visit {
            println it.relativePath
        }
    }
}
